<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>String on My New Hugo Site</title>
    <link>http://localhost:1313/tags/string/</link>
    <description>Recent content in String on My New Hugo Site</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 20 Aug 2023 02:35:44 +0900</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/string/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>String_Method</title>
      <link>http://localhost:1313/posts/java/class/string_method/</link>
      <pubDate>Sun, 20 Aug 2023 02:35:44 +0900</pubDate>
      <guid>http://localhost:1313/posts/java/class/string_method/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;커리어리라는 어플을 보다가 주니어 자바 개발자를 위한 100가지 질문을 보게 되었다. &lt;br&gt;&#xA;오늘의 질문! String 클래스의 메서드는 무엇이 있을까?&lt;br&gt;&#xA;오늘은 해당 질문에 대한 답변을 정리해보려 한다.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;length(): 문자열의 길이를 반환합니다.&lt;/li&gt;&#xA;&lt;li&gt;isEmpty(): 문자열이 비어있는지 확인합니다.&lt;/li&gt;&#xA;&lt;li&gt;equals(Object obj): 주어진 객체와 문자열이 동일한지 비교합니다.&lt;/li&gt;&#xA;&lt;li&gt;equalsIgnoreCase(String str): 대소문자를 무시하고 문자열을 비교합니다.&lt;/li&gt;&#xA;&lt;li&gt;indexOf(String str): 지정된 문자열이 처음으로 나타나는 인덱스를 반환합니다.&lt;/li&gt;&#xA;&lt;li&gt;substring(int beginIndex): 지정된 인덱스부터 문자열 끝까지의 부분 문자열을 반환합니다.&lt;/li&gt;&#xA;&lt;li&gt;substring(int beginIndex, int endIndex): 지정된 범위의 부분 문자열을 반환합니다.&lt;/li&gt;&#xA;&lt;li&gt;split(String regex): 정규식을 기준으로 문자열을 나누어 배열로 반환합니다.&lt;/li&gt;&#xA;&lt;li&gt;toUpperCase(): 문자열의 모든 문자를 대문자로 변환합니다.&lt;/li&gt;&#xA;&lt;li&gt;toLowerCase(): 문자열의 모든 문자를 소문자로 변환합니다.&lt;/li&gt;&#xA;&lt;li&gt;trim(): 문자열의 앞뒤 공백을 제거합니다.&lt;/li&gt;&#xA;&lt;li&gt;replace(char oldChar, char newChar): 지정된 문자를 새로운 문자로 치환합니다.&lt;/li&gt;&#xA;&lt;li&gt;charAt(int index): 지정된 인덱스에 위치한 문자를 반환합니다.&lt;/li&gt;&#xA;&lt;li&gt;contains(CharSequence sequence): 주어진 문자열 또는 문자 시퀀스를 포함하는지 확인합니다.&lt;/li&gt;&#xA;&lt;li&gt;matches(String regex): 정규식과 일치하는지 확인합니다.&lt;/li&gt;&#xA;&lt;li&gt;concat(String str): 다른 문자열을 현재 문자열에 연결합니다.&lt;/li&gt;&#xA;&lt;li&gt;startsWith(String prefix): 주어진 접두어로 시작하는지 확인합니다.&lt;/li&gt;&#xA;&lt;li&gt;endsWith(String suffix): 주어진 접미어로 끝나는지 확인합니다.&lt;/li&gt;&#xA;&lt;li&gt;compareTo(String anotherString): 다른 문자열과의 사전 순서 비교를 수행합니다.&lt;/li&gt;&#xA;&lt;li&gt;compareToIgnoreCase(String str): 대소문자를 무시하고 사전 순서 비교를 수행합니다.&lt;/li&gt;&#xA;&lt;li&gt;format(String format, Object&amp;hellip; args): 지정된 포맷으로 문자열을 생성합니다.&lt;/li&gt;&#xA;&lt;li&gt;valueOf(primitive data type): 기본 데이터 타입의 값을 문자열로 변환합니다.&lt;/li&gt;&#xA;&lt;li&gt;getBytes(): 문자열을 바이트 배열로 변환합니다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;h2 id=&#34;포스트-작성-시-참고한-링크&#34;&gt;포스트 작성 시 참고한 링크&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;&#34;&gt;문자열 메서드&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>[Java] 문자열을 반전 시키는 가장 좋은 방법</title>
      <link>http://localhost:1313/posts/java/basic/stringreverser/</link>
      <pubDate>Sun, 20 Aug 2023 01:22:51 +0900</pubDate>
      <guid>http://localhost:1313/posts/java/basic/stringreverser/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;커리어리라는 어플을 보다가 주니어 자바 개발자를 위한 100가지 질문을 보게 되었다. &lt;br&gt;&#xA;오늘의 질문! 문자열을 반전 시키는 가장 좋은 방법은 무엇인가?&lt;br&gt;&#xA;오늘은 해당 질문에 대한 답변을 정리해보려 한다.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;문자열을-반전-시키는-가장-좋은-방법이란&#34;&gt;문자열을 반전 시키는 가장 좋은 방법이란&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;문자열을 반전 시키는 방법은 정말 많이 있다.&lt;br&gt;&#xA;예를 들어 반복문을 사용하는 방법, 라이브러리 함수를 이용하는 방법, 재귀함수를 이용하는 방법 등 정말 다양한 방법이 있다.&lt;br&gt;&#xA;이 중에서 효율이 좋다고 생각하는 방법 1가지에 대해 알아보고자 한다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;stringbuilder를-사용해-문자열-반전-시키기&#34;&gt;StringBuilder를 사용해 문자열 반전 시키기&lt;/h2&gt;&#xA;&lt;p&gt;자바에서 문자열을 반전 시키는 가장 일반적인 방법으로 StringBuilder의 reverse() 메서드를 사용하는 방법이다.&lt;br&gt;&#xA;이 방법은 가장 효율적인 방법 중 하나입니다.&lt;br&gt;&#xA;문자열은 불변 객체이기 때문에 문자열을 직접 수정을 시도하면 매번 힙 영역의 새로운 문자열 객체를 생성하게 된다.&lt;br&gt;&#xA;이는 매번 Garbage가 쌓여 메모리 효율을 떨어트릴 수 있으며 StringBuilder를 사용하면 이러한 비 효율성을 줄여줄 수 있다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>[Java] String은 기본 타입인가? 그리고 StringBuffer, StringBuilder</title>
      <link>http://localhost:1313/posts/java/class/string/</link>
      <pubDate>Sat, 19 Aug 2023 18:11:51 +0900</pubDate>
      <guid>http://localhost:1313/posts/java/class/string/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;커리어리라는 어플을 보다가 주니어 자바 개발자를 위한 100가지 질문을 보게 되었다.&lt;br&gt;&#xA;오늘은 여러가지 질문 중 String에 대해 알아보고자 한다.&#xA;String은 기본 데이터 타입인지?&#xA;문자열을 조작하는 클래스는 무엇이 있는지?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;string은-무엇인가&#34;&gt;String은 무엇인가?&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;기본 자료형(int, float, char, boolean)처럼 자주 사용되는 class이다.&lt;br&gt;&#xA;String은 이 기본 자료형들과는 다르게 참조 자료형 class이다.&lt;br&gt;&#xA;참조 자료형이란 객체 자체에 값을 가지는 것이 아닌 객체에는 referenece(주소) 값을 갖고 있고 해당 reference에 객체의 값이 있는 형태다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;string은-기본-데이터-타입인가&#34;&gt;String은 기본 데이터 타입인가?&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;위에서도 말씀 드렸지만 String은 기본 데이터 타입이 아닌 참조 자료형 클래스 이다.&lt;br&gt;&#xA;기본 타입과 달리 heap 영역에 생성된다.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
