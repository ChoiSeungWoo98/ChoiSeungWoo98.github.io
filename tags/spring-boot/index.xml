<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Spring-Boot - Tag - 승우의 개발 일기🧑🏻‍💻</title>
        <link>https://choiseungwoo98.github.io/tags/spring-boot.html</link>
        <description>Spring-Boot - Tag - 승우의 개발 일기🧑🏻‍💻</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 06 May 2023 19:29:42 &#43;0900</lastBuildDate><atom:link href="https://choiseungwoo98.github.io/tags/spring-boot.html" rel="self" type="application/rss+xml" /><item>
    <title>[Java] Spring Boot, Websocket &#43; STOMP 사용하기</title>
    <link>https://choiseungwoo98.github.io/websocket.html</link>
    <pubDate>Sat, 06 May 2023 19:29:42 &#43;0900</pubDate>
    <author>choiseU</author>
    <guid>https://choiseungwoo98.github.io/websocket.html</guid>
    <description><![CDATA[ 일을 하던 중 프로그래스 바와 같은 작업의 완료 타이밍을 알 수 있는 방법이 있을까?
같은 고민을 하다가 WebSocket을 알게 되었고 그 과정을 글로 작성해보려고 한다.
Web Socket을 사용한 코드 게시물은 추후에 작성하겠습니다!! 아래 코드는 첨부했습니다!
포스트 작성 시 참고한 링크 코드 ]]></description>
</item>
<item>
    <title>[Java] 서버에서 클라이언트로 이벤트를 보내는 4가지 방법</title>
    <link>https://choiseungwoo98.github.io/servereventtoclient.html</link>
    <pubDate>Sat, 06 May 2023 19:29:42 &#43;0900</pubDate>
    <author>choiseU</author>
    <guid>https://choiseungwoo98.github.io/servereventtoclient.html</guid>
    <description><![CDATA[일을 하던 중 프로그래스 바와 같은 작업의 완료 타이밍을 알 수 있는 방법이 있을까?
같은 고민을 하다가 WebSocket을 알게 되었고 그 과정을 글로 작성해보려고 한다.
서버에서 클라이언트로 이벤트를 보내는 4가지 방법 1. Polling 클라이언트가 평벙한 http request를 서버로 계속 날려서 이벤트 내용을 받는 방법 가장 쉬운 방법이지만 클라이언트가 지속적으로 request를 보내야 하기 때문에 클라이언트가 많아 질 수록 서버 부담이 급증 실시간으로 정보를 응답 받는 것이 아닌 반복해서 request를 보내는 사이에 바뀐 내용을 받아오는 방식 http 오버헤드가 발생한다는 큰 단점.]]></description>
</item>
</channel>
</rss>
